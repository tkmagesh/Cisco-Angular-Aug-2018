import { Component, OnInit } from '@angular/core';
import { Bug } from './models/Bug';
import { BugOperationsService } from './services/bugOperations.service';

@Component({
	selector : 'app-bug-tracker',
	templateUrl : './bugTracker.component.html',
})
export class BugTrackerComponent implements OnInit{
	bugs : Bug[] = [];

	sortBy : string = 'name';
	sortDesc : boolean = false;

	

	constructor(private bugOperations : BugOperationsService){
		
	}

	async ngOnInit(){
		this.bugs = await this.bugOperations.getAll();
	}

	newBugAdded(newBug : Bug){
		this.bugs = [...this.bugs, newBug];
	}

	async onBugNameClick(bugToToggle : Bug){
		let toggledBug = await this.bugOperations.toggle(bugToToggle);
		this.bugs = this.bugs.map(bug => bug.id === bugToToggle.id ? toggledBug : bug));
		
	}

	onRemoveClosedClick(){
		this
			.bugs
			.filter(bug => bug.isClosed)
			.forEach(async closedBug => {
				await this.bugOperations.remove(closedBug);
				this.bugs = this.bugs.filter(bug => bug.id !== closedBug.id);
			});
		
	}

	/* convert the following to a 'closedCountPipe' */
	/*getClosedCount(){
		console.log('getClosedCount triggered');
		return this.bugs.reduce((result, bug)=> bug.isClosed ? ++result : result, 0);
	}*/
}